c
n
c
GamePlace.where(:city_id => filter_params[:location]).pluck[:id]
filter_params[:location]
filter_params[:location'
c
cv'
gp_indicies
n
params
c
res.uniq & [1, 5, 3]
res.uniq + [1, 5, 3]
res.unique + [1, 5, 3]
res.uniq
res = [1, 2, 3] + [2, 3, 4, 5, 6]
[1, 2, 3] & [2, 3, 4, 5, 6]
[1, 2, 3] + [2, 3, 4, 5, 6]
[1, 2, 3] && [2, 3, 4, 5, 6]
[1, 2, 3] && [2, 3, 4, 5, ,6]
GamePlace.joins(:reviews).group('game_places.id').having('SUM(reviews.overall_rating)/COUNT(reviews.overall_rating)*1.0 >= ?', 0).pluck(:id)
GamePlace.joins(:reviews).group('game_places.id').having('SUM(reviews.overall_rating)/COUNT(reviews.overall_rating)*1.0 >= ?', 4).pluck(:id)
GamePlace.joins(:reviews).group('game_places.id').having('SUM(reviews.overall_rating)/COUNT(reviews.overall_rating)*1.0 >= ?', filter_params[:rating]).pluck(:id)
GamePlace.joins(:reviews).group('game_places.id').where('SUM(reviews.overall_rating)/COUNT(reviews.overall_rating)*1.0 >= ?', filter_params[:rating]).pluck(:id)
game_places = game_places.joins(:reviews)
game_places = game_places.joins(:reviews).where('SUM(reviews.overall_rating)/COUNT(reviews.overall_rating)*1.0 >= ?', filter_params[:rating])
filter_params[:rating]
game_places = game_places.joins(:reviews).where('SUM(reviews.overall_rating)/COUNT(reviews.overall_rating) > ?', filter_params[:rating])
n
game_places
params
c
n
results_name
n
game_places
n
params
c
params
c
params
c
game_places
game_place
obj.values.each { |val| game_places += val }
game_places = []
[] + obj.values.first
obj.values.first
[] + [1, 2, 3]
game_places
c
@game_places
obj.values.each { |val| @game_places + val }
@game_places = []
c
n
c
obj.valuesc
obj.values.length
obj.values
obj[results_name]
obj[results_cities]
obj
n
results_cities
n
cities
n
results_name
n
params
obj
n
c
n
obj
n
c
let array1 = ['a','b','c']
results_name
c
GamePlace.where("name LIKE ?", "%#{filter_params[:name]}%")
GamePlace.where("name LIKE lower(?)", "%#{filter_params[:name]}%")
GamePlace.where("lower(name) LIKE lower(?)", "%#{filter_params[:name]}%")
results_name
c
names = GamePlace.pluck(:name).select {|gp| gp.downcase.include?(filter_params[:name])}
n
params
c
c\
params
cparams
c
params
c
player_city_id = current_player.city.id
c
n
city.game_places.first
city
n
c
City.find_by(id: city_idx)
City.find(params[id: city_idx])
City.find(params[city_idx])
City.find(43)
city = City.find(params[:city_idx])
n
city_idx = areaParams.to_i
n
areaParams
c
b
a
p > 1 ? a = p : b = p
p = 0
0 ? 1 : 2
GamePlace.find(params[:id])
'43'.to_i
'area'.to_i
params
c
params
c
params
c
params
c
n
nn
n
c
reservations
c
reservations.sort { |a, b| a.date_info <=> b.date_info }
a.sort { |a, b| b.date_info <=> a.date_info }
a.sort { |a, b| a.date_info <=> b.date_info }
a = reservations[0..3]
c
params
c
params
c
params
c
n
c
array
c
game_places
@game_places
c
@game_places
c
array
c
game_places.first.reviews.average(:overall_rating)
game_places.first.reviews
game_places.first
c
gp2
gp1
c
@game_places
c
@game_places
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
a = gp2.reviews.average(:overall_rating)
c
a = gp2.reviews.average(:overall_rating)
a = gp1.reviews.average(:overall_rating)
c
n
total1 > total2 ? @game_places << gp1 : @game_places << gp2
total2
total1
n
c
total2
total1
n
gp2
c
gp2
c
a = gp1.reviews.pluck(:overall_rating)
c
n
@game_places
n
params
c
r = GamePlace.all.each { |gp| @game_places << gp if gp.city.area == 'east'}
n
current_player
n
c
sort = params[:sort]
params
c
nc
n
game_places
GamePlace.all.each { |gp| game_places << gp if gp.city.area == params[:area]}
GamePlace.all.each do |gp|
game_places = []
c
n
params[:area]
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
@reviews
@reviews = @reviews.where(game_place_id: params[:gpId])
@reviews = Review.all
params[:gpId]
params
c
Reservation.all.select{ |reservation| reservation.player_id == current_player.id}
params
